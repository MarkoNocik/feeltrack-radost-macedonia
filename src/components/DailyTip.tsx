
import React, { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Lightbulb, RefreshCw, Heart } from 'lucide-react';

const tips = [
  {
    category: "–°—Ç—Ä–µ—Å",
    title: "–î–∏—à–µ—ö–µ –∑–∞ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—ò–∞",
    content: "–ö–æ–≥–∞ —Å–µ —á—É–≤—Å—Ç–≤—É–≤–∞—Ç–µ —Å—Ç—Ä–µ—Å–∏—Ä–∞–Ω–æ, –ø—Ä–æ–±–∞—ò—Ç–µ —Å–æ –¥–ª–∞–±–æ–∫–æ –¥–∏—à–µ—ö–µ: –≤–¥–∏—à–µ—Ç–µ 4 —Å–µ–∫—É–Ω–¥–∏, –∑–∞–¥—Ä–∂–µ—Ç–µ 4 —Å–µ–∫—É–Ω–¥–∏, –∏–∑–¥–∏—à–µ—Ç–µ 4 —Å–µ–∫—É–Ω–¥–∏. –ü–æ–≤—Ç–æ—Ä–µ—Ç–µ 5 –ø–∞—Ç–∏.",
    emoji: "üå∏"
  },
  {
    category: "–û–¥–Ω–æ—Å–∏",
    title: "–ü–æ–≤—Ä–∑—É–≤–∞—ö–µ —Å–æ –ø—Ä–∏—ò–∞—Ç–µ–ª–∏",
    content: "–ò—Å–ø—Ä–∞—Ç–µ—Ç–µ –ø–æ—Ä–∞–∫–∞ –Ω–∞ –µ–¥–µ–Ω –ø—Ä–∏—ò–∞—Ç–µ–ª –∫–æ–º—É –Ω–µ —Å—Ç–µ –º—É —Å–µ —ò–∞–≤–∏–ª–µ —Å–∫–æ—Ä–æ. –ú–∞–ª–∏—Ç–µ –≥–µ—Å—Ç–æ–≤–∏ –Ω–∞ –≥—Ä–∏–∂–∞ –≥–∏ –∑–∞—Å–∏–ª—É–≤–∞–∞—Ç –≤—Ä—Å–∫–∏—Ç–µ.",
    emoji: "üíù"
  },
  {
    category: "–°–æ–Ω",
    title: "–ü–æ–¥–æ–±–∞—Ä —Å–æ–Ω",
    content: "–û—Å—Ç–∞–≤–µ—Ç–µ –≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–æ—Ç —á–∞—Å –≤—Ä–µ–º–µ –ø—Ä–µ–¥ —Å–ø–∏–µ—ö–µ. –ß–∏—Ç–∞—ò—Ç–µ –∫–Ω–∏–≥–∞ –∏–ª–∏ —Å–ª—É—à–∞—ò—Ç–µ –º–∏—Ä–Ω–∞ –º—É–∑–∏–∫–∞ –Ω–∞–º–µ—Å—Ç–æ —Ç–æ–∞.",
    emoji: "üåô"
  },
  {
    category: "–§–∏–∑–∏—á–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç",
    title: "–î–≤–∏–∂–µ—ö–µ –∑–∞ –µ–Ω–µ—Ä–≥–∏—ò–∞",
    content: "–î—É—Ä–∏ –∏ 10 –º–∏–Ω—É—Ç–∏ –ø—Ä–æ—à–µ—Ç–∫–∞ –Ω–∞ —Å–≤–µ–∂ –≤–æ–∑–¥—É—Ö –º–æ–∂–µ –¥–∞ –≤–∏ –≥–æ –ø–æ–¥–æ–±—Ä–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –∏ –µ–Ω–µ—Ä–≥–∏—ò–∞—Ç–∞.",
    emoji: "üö∂‚Äç‚ôÄÔ∏è"
  },
  {
    category: "–°–∞–º–æ–¥–æ–≤–µ—Ä–±–∞",
    title: "–ü–æ–∑–∏—Ç–∏–≤–Ω–∏ –ø–æ—Ç–≤—Ä–¥–∏",
    content: "–°–µ–∫–æ–µ —É—Ç—Ä–æ –∫–∞–∂–µ—Ç–µ —Å–∏ –Ω–µ—à—Ç–æ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ. –ù–∞ –ø—Ä–∏–º–µ—Ä: '–à–∞—Å —Å—É–º —Å–ø–æ—Å–æ–±–µ–Ω/–Ω–∞ –∏ –∑–∞—Å–ª—É–∂—É–≤–∞–º –¥–æ–±—Ä–∏ —Ä–∞–±–æ—Ç–∏.'",
    emoji: "‚ú®"
  },
  {
    category: "–ï–∫—Ä–∞–Ω–∏",
    title: "–î–∏–≥–∏—Ç–∞–ª–Ω–∞ –ø–∞—É–∑–∞",
    content: "–ù–∞–ø—Ä–∞–≤–µ—Ç–µ 20-–º–∏–Ω—É—Ç–Ω–∞ –ø–∞—É–∑–∞ –æ–¥ –µ–∫—Ä–∞–Ω–∏—Ç–µ. –ö–æ—Ä–∏—Å—Ç–µ—Ç–µ –≥–æ —Ç–æ–∞ –≤—Ä–µ–º–µ –∑–∞ —Ü—Ä—Ç–∞—ö–µ, —á–∏—Ç–∞—ö–µ –∏–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä —Å–æ —Å–µ–º–µ—ò—Å—Ç–≤–æ—Ç–æ.",
    emoji: "üì±"
  }
];

export const DailyTip = () => {
  const [currentTip, setCurrentTip] = useState(tips[0]);
  const [isLiked, setIsLiked] = useState(false);

  useEffect(() => {
    // Get today's tip based on date
    const today = new Date();
    const dayIndex = today.getDate() % tips.length;
    setCurrentTip(tips[dayIndex]);
    
    // Check if tip is already liked
    const likedTips = JSON.parse(localStorage.getItem('feeltrack-liked-tips') || '[]');
    setIsLiked(likedTips.includes(tips[dayIndex].title));
  }, []);

  const getNewTip = () => {
    const randomIndex = Math.floor(Math.random() * tips.length);
    setCurrentTip(tips[randomIndex]);
    setIsLiked(false);
  };

  const toggleLike = () => {
    const likedTips = JSON.parse(localStorage.getItem('feeltrack-liked-tips') || '[]');
    
    if (isLiked) {
      const updated = likedTips.filter((title: string) => title !== currentTip.title);
      localStorage.setItem('feeltrack-liked-tips', JSON.stringify(updated));
    } else {
      likedTips.push(currentTip.title);
      localStorage.setItem('feeltrack-liked-tips', JSON.stringify(likedTips));
    }
    
    setIsLiked(!isLiked);
  };

  return (
    <div className="space-y-6 py-6">
      <Card className="p-6 bg-white/70 backdrop-blur-sm border-purple-200">
        <div className="text-center mb-6">
          <div className="flex items-center justify-center space-x-2 mb-4">
            <Lightbulb className="h-6 w-6 text-yellow-500 fill-yellow-500" />
            <h2 className="text-2xl font-bold text-gray-800">–î–µ–Ω–µ—à–µ–Ω —Å–æ–≤–µ—Ç</h2>
          </div>
        </div>
        
        <div className="space-y-4">
          <div className="text-center">
            <span className="text-6xl">{currentTip.emoji}</span>
          </div>
          
          <div className="bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg p-4">
            <div className="text-sm font-medium text-purple-600 mb-2">
              {currentTip.category}
            </div>
            <h3 className="text-lg font-bold text-gray-800 mb-3">
              {currentTip.title}
            </h3>
            <p className="text-gray-700 leading-relaxed">
              {currentTip.content}
            </p>
          </div>
          
          <div className="flex space-x-3">
            <Button
              onClick={toggleLike}
              variant="outline"
              className={`flex-1 ${
                isLiked 
                  ? 'bg-pink-100 border-pink-300 text-pink-700' 
                  : 'hover:bg-pink-50'
              }`}
            >
              <Heart className={`h-4 w-4 mr-2 ${isLiked ? 'fill-pink-500 text-pink-500' : ''}`} />
              {isLiked ? '–°–∞–∫–∞–º' : '–°–∞–∫–∞–º'}
            </Button>
            
            <Button
              onClick={getNewTip}
              variant="outline"
              className="flex-1 hover:bg-purple-50"
            >
              <RefreshCw className="h-4 w-4 mr-2" />
              –ù–æ–≤ —Å–æ–≤–µ—Ç
            </Button>
          </div>
        </div>
      </Card>
    </div>
  );
};
